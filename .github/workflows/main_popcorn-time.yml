# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy PHP app to Azure Web App - popcorn-time

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        # Set the default working directory to the repository root (New)
        # Note further down: zip ../release.zip
        working-directory: ./popcorn-app

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"

      - name: Install laravel dependencies
        run: |
          composer install --no-progress

      - name: Check if composer.json exists
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "popcorn-app/composer.json"

      - name: Run composer install if composer.json exists
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          composer validate --no-check-publish && composer install

      - name: Give full permission to storage folder (NEW)
        run: |
          echo "++++ What is the current directory?"
          pwd
          echo "++++ What is in the storage folder?"
          ls storage
          echo "++++ Give full permission to storage folder"
          chmod -R 777 storage

      # Give full permission to database folder
      - name: Give full permission to database folder
        run: |
          echo "++++ What is the current directory?"
          pwd
          echo "++++ What is in the database folder?"
          ls database
          echo "++++ Give full permission to database folder"
          chmod -R 777 database

      - name: Migrate database (NEW)
        run: |
          pwd
          ls
          php artisan migrate --force --seed

      - name: Zip artifact for deployment
        run: |
          pwd
          ls
          zip ../release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: php-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: php-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_130F92216F9B41118B30D084D294A44B }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_BEC36A2C075F40D0BAF1D739ECCA4B98 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_969DD1DDBCFD40B6BB577BA761DA8090 }}

      - name: "Check SQLite Database File"
        run: |
          if [ -f "${{ env.DB_DATABASE }}" ]; then
            echo "Database file exists at ${{ env.DB_DATABASE }}"
          else
            echo "Database file does not exist at ${{ env.DB_DATABASE }}"
            exit 1
          fi
        env:
          DB_DATABASE: database/database.sqlite

      - name: "Deploy to Azure Web App"
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: "popcorn-time"
          slot-name: "Production"
          package: .
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
